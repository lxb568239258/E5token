#include <windows.h>
 
 
//自定义的窗口过程（用于完全关闭窗口）
LRESULT CALLBACK MyWndProc(HWND hWnd,UINT Msg,
	WPARAM wParam,LPARAM lParam)
{
		switch(Msg){
		case WM_DESTROY:
				PostQuitMessage(0);
				return 0;
			default:
				return DefWindowProc(hWnd,Msg,wParam,lParam);
		}
		return 0;
}
 
 
 
int WINAPI WinMain(HINSTANCE hInstance,
	HINSTANCE hPrevInsatnce,LPSTR lpCmdLine,int nShowCmd)
{
	//1.注册窗口类
	WNDCLASS wnd;
	wnd.cbClsExtra=0;//声明程序额外空间所用变量
	wnd.cbWndExtra=0;//额外变量
	wnd.hbrBackground=(HBRUSH)GetStockObject(GRAY_BRUSH);//背景颜色
	wnd.hCursor=LoadCursor(NULL,IDC_ARROW);//鼠标指针
	wnd.hIcon=LoadIcon(NULL,IDI_APPLICATION);//应用程序图标
	wnd.hInstance=hInstance;//实例句柄
	wnd.lpfnWndProc=MyWndProc;//窗口过程函数，用于处理消息（默认的为DefWindProc）
	wnd.lpszClassName=L"卢雅轩";//窗口名称
	wnd.lpszMenuName=NULL;//菜单资源名称
	wnd.style=CS_HREDRAW|CS_VREDRAW;//窗口的类型和风格
	RegisterClass(&wnd);
 
	//创建窗口（返回之前发送WM_CREATE）
	HWND hWnd=CreateWindow(
		L"卢雅轩",//窗口名称
		L"第一个窗口函数",//窗口标题
		WS_OVERLAPPED,
		100,
		100,
		300,
		300,
		NULL,
		NULL,
		hInstance,
		NULL);
 
	//显示窗口
	ShowWindow(hWnd,nShowCmd);
 
 
	//更新窗口（WM_PAINT）
	UpdateWindow(hWnd);
 
	//消息循环（收到MS_QUIT退出）
	MSG msg;
	while(GetMessage(&msg,NULL,0,0)){
		TranslateMessage(&msg);//翻译消息
		DispatchMessage(&msg);//分发消息到窗口过程
	}
}
